steps:

  - id: gcp_pulumi
    env:
      - PULUMI_ACCESS_TOKEN=$_INSECURE_SUBSTITUTION_PULUMI_ACCESS_TOKEN
      - ORG_ID=$_INSECURE_SUBSTITUTION_ORG_ID
      - BILLING_ID=$_INSECURE_SUBSTITUTION_BILLING_ID
      - ORG_NAME=$_ORG_NAME
      - ORG_SHORT_NAME=$_ORG_SHORT_NAME
      - ORG_DESCRIPTION=$_ORG_DESCRIPTION
      - ORG_DOMAIN=$_ORG_DOMAIN
    name: 'pulumi/pulumi'
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        # exit if a command returns a non-zero exit code and also print the commands and their args as they are executed.
        set -e -x

        # Move to the folder with the Pulumi code
        cd pipeline/gcp_pulumi

        # Restore npm dependencies for our infra app.
        npm install

        # Login
        pulumi login
        
        # Select stack
        pulumi stack select $BRANCH_NAME

        # Set project
        pulumi config set gcp:project $PROJECT_ID

        # Up
        pulumi up -y
  
  - id: github
    env:
      - GITHUB_ACCESS_TOKEN=$_INSECURE_SUBSTITUTION_GITHUB_ACCESS_TOKEN
    name: 'pulumi/pulumi'
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        # Install GitHub cli
        curl -L https://github.com/cli/cli/releases/download/v2.14.7/gh_2.14.7_linux_386.tar.gz --output gh.tar.gz
        mkdir /gh
        tar -xf gh.tar.gz -C /gh
        PATH=$$PATH:/gh/$$(ls /gh)/bin

        # Login
        echo "$$GITHUB_ACCESS_TOKEN" | gh auth login --with-token

        # Test
        gh repo list


  # - id: install-argocd
  #   name: 'pulumi/pulumi'
  #   entrypoint: /bin/bash
  #   args:
  #     - '-c'
  #     - |
  #       # exit if a command returns a non-zero exit code and also print the commands and their args as they are executed.
  #       set -e -x

  #       # Move to the folder with the ArgoCD code
  #       cd pipeline/argocd

  #       # Install packages
  #       npm install

  #       # Run
  #       ./main.sh
  #   waitFor: ['-']

options:
  logging: CLOUD_LOGGING_ONLY