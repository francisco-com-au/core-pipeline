steps:

  - id: github
    env:
      - GITHUB_ACCESS_TOKEN=$_INSECURE_SUBSTITUTION_GITHUB_ACCESS_TOKEN
    name: 'pulumi/pulumi'
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        set -e -x
        # Install GitHub cli
        mkdir .tools
        curl -L https://github.com/cli/cli/releases/download/v2.14.7/gh_2.14.7_linux_386.tar.gz --output /tmp/gh.tar.gz
        tar -xf /tmp/gh.tar.gz -C /tmp
        rm /tmp/gh.tar.gz
        mv /tmp/gh*/bin/gh .tools/
        PATH=$$PATH:$$(pwd)/.tools/

        # Login
        echo "$$GITHUB_ACCESS_TOKEN" | gh auth login --with-token

        # Configure git
        gh auth setup-git
        git config --global user.email "core-pipeline-$BRANCH_NAME@$$ORG_DOMAIN"
        git config --global user.name "core-pipeline-$BRANCH_NAME"

        # Move to the folder with the GitHub code
        cd pipeline/github
        
        # Install dependencies
        npm install
        
        # Execute
        ./main.sh

  - id: argocd
    env:
      - GITHUB_ACCESS_TOKEN=$_INSECURE_SUBSTITUTION_GITHUB_ACCESS_TOKEN
      - CONTAINER_REGISTRY_PROJECT=$PROJECT_ID
    name: 'pulumi/pulumi'
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        set -e -x
        # Install GitHub cli
        # mkdir .tools
        # mkdir .tools/gh
        # curl -L https://github.com/cli/cli/releases/download/v2.14.7/gh_2.14.7_linux_386.tar.gz --output .tools/gh/gh.tar.gz
        # tar -xf .tools/gh/gh.tar.gz -C .tools/gh
        PATH=$$PATH:$$(pwd)/.tools/

        # Login
        echo "$$GITHUB_ACCESS_TOKEN" | gh auth login --with-token

        # Configure git
        gh auth setup-git
        git config --global user.email "core-pipeline-$BRANCH_NAME@$$ORG_DOMAIN"
        git config --global user.name "core-pipeline-$BRANCH_NAME"

        # Move to the folder with the GitHub code
        cd pipeline/argocd

        # Install dependencies
        npm install
        
        # Execute
        ./main.sh

  - id: gcp_pulumi
    env:
      - PULUMI_ACCESS_TOKEN=$_INSECURE_SUBSTITUTION_PULUMI_ACCESS_TOKEN
      - ORG_ID=$_INSECURE_SUBSTITUTION_ORG_ID
      - BILLING_ID=$_INSECURE_SUBSTITUTION_BILLING_ID
      - ORG_NAME=$_ORG_NAME
      - ORG_SHORT_NAME=$_ORG_SHORT_NAME
      - ORG_DESCRIPTION=$_ORG_DESCRIPTION
      - ORG_DOMAIN=$_ORG_DOMAIN
    name: 'pulumi/pulumi'
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        # exit if a command returns a non-zero exit code and also print the commands and their args as they are executed.
        set -e -x

        # Move to the folder with the Pulumi code
        cd pipeline/gcp_pulumi

        # Restore npm dependencies for our infra app.
        npm install

        # Login
        pulumi login
        
        # Select stack
        pulumi stack select $BRANCH_NAME

        # Set project
        pulumi config set gcp:project $PROJECT_ID

        # Up
        pulumi up -y

options:
  logging: CLOUD_LOGGING_ONLY